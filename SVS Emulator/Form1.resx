<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ARTLogPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>